#cloud-formation tempalte for AWS infra build up for jeknins based ci-cd master-slave set up 
AWSTemplateFormatVersion: '2010-09-09'
Description: mcrm-ci-Server Autoscaled Infra set up .
Parameters:
    VpcId:
        Type: 'AWS::EC2::VPC::Id'
        Description: VpcId of your existing Virtual Private Cloud (VPC)
        Default: vpc-67050303
        ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
    LSubnet1:
        Type: List<AWS::EC2::Subnet::Id>
        Description: Subnet Id for LogSubnet1 using staging db subnets here
    KeyName:
        Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
        Type: 'AWS::EC2::KeyPair::KeyName'
        Default: drp-test
        ConstraintDescription: must be the name of an existing EC2 KeyPair.
    SSHLocation:
        Description: Lockdown SSH access to the bastion host (default can be accessed from anywhere)
        Type: String
        MinLength: '9'
        MaxLength: '18'
        Default: 0.0.0.0/0
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    InstanceType:
        Description: ciServer EC2 instance type
        Type: String
        Default: t2.micro
        AllowedValues:
            - t1.micro
            - t2.nano
            - t2.micro
            - t2.small
            - t2.medium
            - t2.large
            - m1.small
            - m1.medium
            - m1.large
            - m1.xlarge
            - m2.xlarge
            - m2.2xlarge
            - m2.4xlarge
            - m3.medium
            - m3.large
            - m3.xlarge
            - m3.2xlarge
            - m4.large
            - m4.xlarge
            - m4.2xlarge
            - m4.4xlarge
            - m4.10xlarge
            - c1.medium
            - c1.xlarge
            - c3.large
            - c3.xlarge
            - c3.2xlarge
            - c3.4xlarge
            - c3.8xlarge
            - c4.large
            - c4.xlarge
            - c4.2xlarge
            - c4.4xlarge
            - c4.8xlarge
            - g2.2xlarge
            - g2.8xlarge
            - r3.large
            - r3.xlarge
            - r3.2xlarge
            - r3.4xlarge
            - r3.8xlarge
            - i2.xlarge
            - i2.2xlarge
            - i2.4xlarge
            - i2.8xlarge
            - d2.xlarge
            - d2.2xlarge
            - d2.4xlarge
            - d2.8xlarge
            - hi1.4xlarge
            - hs1.8xlarge
            - cr1.8xlarge
            - cc2.8xlarge
            - cg1.4xlarge
        ConstraintDescription: must be a valid EC2 instance type.
    InstanceCount:
        Description: Number of EC2 instances to launch
        Type: Number
        Default: '1'
Mappings:
    Region2Examples:
        eu-west-1:
            Examples: 'https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1'
        eu-central-1:
            Examples: 'https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1'
    AWSInstanceType2Arch:
        t1.micro:
            Arch: PV64
        t2.nano:
            Arch: HVM64
        t2.micro:
            Arch: HVM64
        t2.small:
            Arch: HVM64
        t2.medium:
            Arch: HVM64
        t2.large:
            Arch: HVM64
        m1.small:
            Arch: PV64
        m1.medium:
            Arch: PV64
        m1.large:
            Arch: PV64
        m1.xlarge:
            Arch: PV64
        m2.xlarge:
            Arch: PV64
        m2.2xlarge:
            Arch: PV64
        m2.4xlarge:
            Arch: PV64
        m3.medium:
            Arch: HVM64
        m3.large:
            Arch: HVM64
        m3.xlarge:
            Arch: HVM64
        m3.2xlarge:
            Arch: HVM64
        m4.large:
            Arch: HVM64
        m4.xlarge:
            Arch: HVM64
        m4.2xlarge:
            Arch: HVM64
        m4.4xlarge:
            Arch: HVM64
        m4.10xlarge:
            Arch: HVM64
        c1.medium:
            Arch: PV64
        c1.xlarge:
            Arch: PV64
        c3.large:
            Arch: HVM64
        c3.xlarge:
            Arch: HVM64
        c3.2xlarge:
            Arch: HVM64
        c3.4xlarge:
            Arch: HVM64
        c3.8xlarge:
            Arch: HVM64
        c4.large:
            Arch: HVM64
        c4.xlarge:
            Arch: HVM64
        c4.2xlarge:
            Arch: HVM64
        c4.4xlarge:
            Arch: HVM64
        c4.8xlarge:
            Arch: HVM64
        g2.2xlarge:
            Arch: HVMG2
        g2.8xlarge:
            Arch: HVMG2
        r3.large:
            Arch: HVM64
        r3.xlarge:
            Arch: HVM64
        r3.2xlarge:
            Arch: HVM64
        r3.4xlarge:
            Arch: HVM64
        r3.8xlarge:
            Arch: HVM64
        i2.xlarge:
            Arch: HVM64
        i2.2xlarge:
            Arch: HVM64
        i2.4xlarge:
            Arch: HVM64
        i2.8xlarge:
            Arch: HVM64
        d2.xlarge:
            Arch: HVM64
        d2.2xlarge:
            Arch: HVM64
        d2.4xlarge:
            Arch: HVM64
        d2.8xlarge:
            Arch: HVM64
        hi1.4xlarge:
            Arch: HVM64
        hs1.8xlarge:
            Arch: HVM64
        cr1.8xlarge:
            Arch: HVM64
        cc2.8xlarge:
            Arch: HVM64
    AWSInstanceType2NATArch:
        t1.micro:
            Arch: NATPV64
        t2.nano:
            Arch: NATHVM64
        t2.micro:
            Arch: NATHVM64
        t2.small:
            Arch: NATHVM64
        t2.medium:
            Arch: NATHVM64
        t2.large:
            Arch: NATHVM64
        m1.small:
            Arch: NATPV64
        m1.medium:
            Arch: NATPV64
        m1.large:
            Arch: NATPV64
        m1.xlarge:
            Arch: NATPV64
        m2.xlarge:
            Arch: NATPV64
        m2.2xlarge:
            Arch: NATPV64
        m2.4xlarge:
            Arch: NATPV64
        m3.medium:
            Arch: NATHVM64
        m3.large:
            Arch: NATHVM64
        m3.xlarge:
            Arch: NATHVM64
        m3.2xlarge:
            Arch: NATHVM64
        m4.large:
            Arch: NATHVM64
        m4.xlarge:
            Arch: NATHVM64
        m4.2xlarge:
            Arch: NATHVM64
        m4.4xlarge:
            Arch: NATHVM64
        m4.10xlarge:
            Arch: NATHVM64
        c1.medium:
            Arch: NATPV64
        c1.xlarge:
            Arch: NATPV64
        c3.large:
            Arch: NATHVM64
        c3.xlarge:
            Arch: NATHVM64
        c3.2xlarge:
            Arch: NATHVM64
        c3.4xlarge:
            Arch: NATHVM64
        c3.8xlarge:
            Arch: NATHVM64
        c4.large:
            Arch: NATHVM64
        c4.xlarge:
            Arch: NATHVM64
        c4.2xlarge:
            Arch: NATHVM64
        c4.4xlarge:
            Arch: NATHVM64
        c4.8xlarge:
            Arch: NATHVM64
        g2.2xlarge:
            Arch: NATHVMG2
        g2.8xlarge:
            Arch: NATHVMG2
        r3.large:
            Arch: NATHVM64
        r3.xlarge:
            Arch: NATHVM64
        r3.2xlarge:
            Arch: NATHVM64
        r3.4xlarge:
            Arch: NATHVM64
        r3.8xlarge:
            Arch: NATHVM64
        i2.xlarge:
            Arch: NATHVM64
        i2.2xlarge:
            Arch: NATHVM64
        i2.4xlarge:
            Arch: NATHVM64
        i2.8xlarge:
            Arch: NATHVM64
        d2.xlarge:
            Arch: NATHVM64
        d2.2xlarge:
            Arch: NATHVM64
        d2.4xlarge:
            Arch: NATHVM64
        d2.8xlarge:
            Arch: NATHVM64
        hi1.4xlarge:
            Arch: NATHVM64
        hs1.8xlarge:
            Arch: NATHVM64
        cr1.8xlarge:
            Arch: NATHVM64
        cc2.8xlarge:
            Arch: NATHVM64
    AWSRegionArch2AMI:
        eu-west-1:
            PV64: ami-23ab2250
            HVM64: ami-fbdc0c82
            HVMG2: ami-936de5e0
        eu-central-1:
            PV64: ami-27c12348
            HVM64: ami-d3c022bc
            HVMG2: ami-8e7092e1
Resources:
    ciServerGroupv2:
        Type: 'AWS::AutoScaling::AutoScalingGroup'
        Properties:
            VPCZoneIdentifier: !Ref LSubnet1
            LaunchConfigurationName:
                Ref: LaunchConfig
            MinSize: '1'
            MaxSize: '1'
            HealthCheckType: EC2
            HealthCheckGracePeriod: '300'
            DesiredCapacity:
                Ref: InstanceCount
            Tags:
                - 
                    PropagateAtLaunch: 'true'
                    Value:
                        'Fn::Join':
                            - '-'
                            - 
                                - 
                                    Ref: 'AWS::StackName'
                                - -dev-stack
                    Key: Name
            LoadBalancerNames:
                - 
                    Ref: ElasticLoadBalancer
    LaunchConfig:
        Type: 'AWS::AutoScaling::LaunchConfiguration'
        Properties:
            AssociatePublicIpAddress: 'true'
            ImageId:
                'Fn::FindInMap':
                    - AWSRegionArch2AMI
                    - 
                        Ref: 'AWS::Region'
                    - 
                        'Fn::FindInMap':
                            - AWSInstanceType2Arch
                            - 
                                Ref: InstanceType
                            - Arch
            SecurityGroups:
                - 
                    Ref: InstanceSecurityGroup
            KeyName:
                Ref: KeyName
            InstanceType:
                Ref: InstanceType
            IamInstanceProfile: ciserver-role
            UserData:
                'Fn::Base64':
                 !Sub |
                    #!/bin/bash -vx
                    exec > >(tee /var/log/userdata.log) 2>&1
                    IP=$(/usr/bin/ec2metadata | grep public-ipv4 | head -n 1 | awk '{print $2}' | sed 's/\./-/g')
                    INSTANCE_TAG=mcrm-ci-client
                    NEWRELIC_HOSTNAME=$INSTANCE_TAG-$IP
                    hostname $NEWRELIC_HOSTNAME
                    echo "127.0.0.1      $NEWRELIC_HOSTNAME" >>  /etc/hosts
                    echo "hostname=$NEWRELIC_HOSTNAME" >> /etc/newrelic/nrsysmond.cfg
                    /etc/init.d/newrelic-sysmond restart
                    apt-get -y install unzip
                    cd /tmp && wget https://aws-codedeploy-eu-west-1.s3.amazonaws.com/latest/install
                    apt-get -y install ruby2.0
                    chmod 755 /tmp/install
                    cd /tmp/ && ./install auto
    ElasticLoadBalancer:
        Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
        Properties:
            CrossZone: 'true'
            SecurityGroups:
                - 
                    Ref: LoadBalancerSecurityGroup
            Subnets: !Ref LSubnet1
            ConnectionDrainingPolicy:
                Enabled: true
                Timeout: 120
            Listeners:
                - 
                    LoadBalancerPort: '80'
                    InstancePort: '8080'
                    Protocol: HTTP
             HealthCheck:
                Target: 'TCP:8080'
                HealthyThreshold: '2'
                UnhealthyThreshold: '9'
                Interval: '30'
                Timeout: '25'
    LoadBalancerSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: Enable HTTP access on port 80
            VpcId:
                Ref: VpcId
            SecurityGroupIngress:
                - 
                    IpProtocol: tcp
                    FromPort: '8080'
                    ToPort: '8080'
                    CidrIp: 0.0.0.0/0
    InstanceSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: Enable HTTP access and SSH access
            VpcId:
                Ref: VpcId
            SecurityGroupIngress:
                - 
                    IpProtocol: tcp
                    FromPort: '8080'
                    ToPort: '8080'
                    SourceSecurityGroupId:
                        Ref: LoadBalancerSecurityGroup
                - 
                    IpProtocol: tcp
                    FromPort: '22'
                    ToPort: '22'
                    CidrIp:
                        Ref: SSHLocation
    mcrmcistackscaledownpolicy:
        Type: 'AWS::AutoScaling::ScalingPolicy'
        Properties:
            ScalingAdjustment: -1
            Cooldown: 300
            AutoScalingGroupName:
                Ref: ciServerGroupv2
            AdjustmentType: ChangeInCapacity
    CPUAlarmLow:
        Type: 'AWS::CloudWatch::Alarm'
        Properties:
            EvaluationPeriods: '10'
            Dimensions:
                - 
                    Name: AutoScalingGroupName
                    Value:
                        Ref: ciServerGroupv2
            AlarmActions:
                - 
                    Ref: mcrmcistackscaledownpolicy
            AlarmDescription: Alarm cpu load is  low
            Namespace: AWS/EC2
            Period: '60'
            ComparisonOperator: LessThanThreshold
            Statistic: Average
            Threshold: '35'
            Unit: Percent
            MetricName: CPUUtilization
    mcrmcistackscaleuppolicy:
        Type: 'AWS::AutoScaling::ScalingPolicy'
        Properties:
            ScalingAdjustment: 1
            Cooldown: 300
            AutoScalingGroupName:
                Ref: ciServerGroupv2
            AdjustmentType: ChangeInCapacity
    CPUAlarmUP:
        Type: 'AWS::CloudWatch::Alarm'
        Properties:
            EvaluationPeriods: '10'
            Dimensions:
                - 
                    Name: AutoScalingGroupName
                    Value:
                        Ref: ciServerGroupv2
            AlarmActions:
                - 
                    Ref: mcrmcistackscaleuppolicy
            AlarmDescription: 'Alarm cpu load is above 90 '
            Namespace: AWS/EC2
            Period: '60'
            ComparisonOperator: GreaterThanThreshold
            Statistic: Average
            Threshold: '90'
            Unit: Percent
            MetricName: CPUUtilization
Outputs:
    URL:
        Description: URL of the cisite
        Value:
            'Fn::Join':
                - ''
                - 
                    - 'http://'
                    - 
                        'Fn::GetAtt':
                            - ElasticLoadBalancer
                            - DNSName
                            - ElasticIp
